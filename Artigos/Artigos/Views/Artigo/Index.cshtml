@model PagedList.IPagedList<Artigos.Models.ModelViewArtigoEscritor>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Home";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="indexEscritorContainer">
    <div class="divFiltro">
        <p>
            @Html.ActionLink("Adicionar novo Artigo", "Create")
        </p>
        @using (Html.BeginForm("Index", "Artigo", FormMethod.Get))
        {
            <div class="input-group">
                <input type="search" class="form-control rounded" placeholder="Buscar" aria-label="Search"
                       aria-describedby="search-addon" name="nome" />
                <input type="submit" class="btn btn-outline-primary" value="Buscar" />
            </div>
        }
    </div>
    <div class="divArtigos">

        @foreach (var item in Model)
        {
            <div class="divArtigosContainer">
                <div class="artigoCapa">
                    @{ 
                        var base64 = Convert.ToBase64String(item.Capa);
                        var img = String.Format("data:image/gif;base64,{0}", base64);

                        string ativa = "Não";
                        if(item.Ativo == 1)
                        {
                            ativa = "Sim";
                        }
                    } 
                    <img src="@img" />
                </div>
                <div class="artigoTexto">
                    <div class="artigoTextoTitulo">
                        <p>@item.Titulo</p>
                    </div>
                    <div class="artigoTextoInfo">
                        <span>By: @item.Nome @item.Sobrenome. Ativa: @ativa</span>
                    </div>
                </div>
                <div class="artigoBtn">
                    @Html.ActionLink("Editar", "Update", new { id = item.Id }, new { @class = "btn btn-outline-primary" })
                </div>
            </div>
        }
    </div>
    <div class="divPage">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
    </div>
</div>

